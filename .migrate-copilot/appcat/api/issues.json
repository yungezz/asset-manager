[{"applicationId":"","issues":{"optional":[{"id":"937d4f2f-d7ae-46bc-b93e-f2cc6ee0c497","name":"Relative path found","ruleId":"azure-file-system-02000","effort":{"type":"Redesign","points":5,"description":"Requires re-design or library change"},"totalIncidents":2,"totalStoryPoints":10,"links":[{"title":"Relative path found in the application","href":"https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-cloud-to-azure-spring-apps?pivots=sc-standard-tier#determine-whether-and-how-the-file-system-is-used"},{"title":"Azure Monitor Logs overview","href":"https://learn.microsoft.com/azure/azure-monitor/logs/data-platform-logs"},{"title":"Azure Cache for Redis documentation","href":"https://learn.microsoft.com/azure/azure-cache-for-redis"},{"title":"Azure Storage documentation","href":"https://learn.microsoft.com/azure/storage"},{"title":"Azure App Configuration documentation","href":"https://learn.microsoft.com/azure/azure-app-configuration"}],"affectedFiles":[{"description":"Relative path found in the application. An application running inside a container could lose access to a file in local storage.\nTo migrate a Java application that uses file system to Azure:\n\n* **Identify the usage of the file system**: Find any instances where your services write to and/or read from the local file system. Identify where short-term/temporary files are written and read and where long-lived files are written and read.\n\nThe following recommendations depend on the function of the file in local storage:\n\n* **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.\n\n* **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n* **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n* **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.","files":[{"fileId":"98440","fileName":"com.microsoft.migration.assets.service.LocalFileStorageService","occurrences":1},{"fileId":"90312","fileName":"com.microsoft.migration.assets.worker.service.LocalFileProcessingService","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"5e1f2ba0-d4d2-48c1-b841-3d3ea870371b","name":"Spring RabbitMQ usage found in code","ruleId":"azure-message-queue-rabbitmq-01000","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":33,"totalStoryPoints":0,"links":[{"title":"Azure Service Bus documentation","href":"https://learn.microsoft.com/azure/service-bus-messaging"},{"title":"Use Azure Service Bus in Spring applications","href":"https://learn.microsoft.com/azure/developer/java/spring-framework/using-service-bus-in-spring-applications"}],"affectedFiles":[{"description":"The application uses Spring RabbitMQ based on Spring AMQP in code. To migrate a Java application that uses Spring RabbitMQ to Azure, you can follow these recommendations:\n\n* Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n* Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n* Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.","files":[{"fileId":"65640","fileName":"com.microsoft.migration.assets.worker.config.RabbitConfig","occurrences":9},{"fileId":"86152","fileName":"com.microsoft.migration.assets.AssetsManagerApplication","occurrences":2},{"fileId":"61664","fileName":"com.microsoft.migration.assets.config.RabbitConfig","occurrences":9},{"fileId":"123016","fileName":"com.microsoft.migration.assets.worker.WorkerApplication","occurrences":2},{"fileId":"73920","fileName":"com.microsoft.migration.assets.worker.service.AbstractFileProcessingService","occurrences":2},{"fileId":"82144","fileName":"com.microsoft.migration.assets.service.AwsS3Service","occurrences":3},{"fileId":"98440","fileName":"com.microsoft.migration.assets.service.LocalFileStorageService","occurrences":4},{"fileId":"45248","fileName":"com.microsoft.migration.assets.service.BackupMessageProcessor","occurrences":2}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"6ff27d6d-9bcb-4b16-8a95-cf9f981eac81","name":"RabbitMQ connection string, username or password found in configuration file","ruleId":"azure-message-queue-config-rabbitmq-01000","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":6,"totalStoryPoints":0,"links":[{"title":"Azure Service Bus documentation","href":"https://learn.microsoft.com/azure/service-bus-messaging"},{"title":"Service connection in Azure Spring Apps","href":"https://learn.microsoft.com/azure/service-connector/quickstart-portal-spring-cloud-connection"},{"title":"Passwordless connections for Azure services","href":"https://learn.microsoft.com/azure/developer/intro/passwordless-overview"}],"affectedFiles":[{"description":"The application uses a RabbitMQ connection string, username, or password. To migrate a Java application that uses a RabbitMQ connection string to Azure, you can follow these recommendations:\n\n* Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n* **Connect to Azure Service Bus using Service Connector**: Create service connection using **Service Connector** to connect your Azure Service Bus to your azure app. Instead of manually configuring connection string in your applications, you can automatically connect Azure Service Bus using Service Connector.\n\n* **Passwordless connections for Azure services**: Consider using passwordless connections for Azure services. You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.","files":[{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":3},{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":3}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"1d1d9656-a1c7-4d97-a464-9024fa72032a","name":"Spring AMQP usage found in code","ruleId":"azure-message-queue-amqp-01000","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":75,"totalStoryPoints":0,"links":[{"title":"Use Azure Service Bus in Spring applications","href":"https://learn.microsoft.com/azure/developer/java/spring-framework/using-service-bus-in-spring-applications"},{"title":"Azure Service Bus documentation","href":"https://learn.microsoft.com/azure/service-bus-messaging"}],"affectedFiles":[{"description":"The application uses Spring AMQP in code. To migrate a Java application that uses Spring AMQP to Azure, you can follow these recommendations:\n\n* Provision **Azure Service Bus**: Use Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n* Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n* Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.","files":[{"fileId":"65640","fileName":"com.microsoft.migration.assets.worker.config.RabbitConfig","occurrences":29},{"fileId":"61664","fileName":"com.microsoft.migration.assets.config.RabbitConfig","occurrences":29},{"fileId":"123016","fileName":"com.microsoft.migration.assets.worker.WorkerApplication","occurrences":2},{"fileId":"82144","fileName":"com.microsoft.migration.assets.service.AwsS3Service","occurrences":3},{"fileId":"98440","fileName":"com.microsoft.migration.assets.service.LocalFileStorageService","occurrences":4},{"fileId":"45248","fileName":"com.microsoft.migration.assets.service.BackupMessageProcessor","occurrences":3},{"fileId":"86152","fileName":"com.microsoft.migration.assets.AssetsManagerApplication","occurrences":2},{"fileId":"73920","fileName":"com.microsoft.migration.assets.worker.service.AbstractFileProcessingService","occurrences":3}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"a9c4d993-c846-4c9d-ac3f-856a43fec666","name":"Spring AMQP dependency found","ruleId":"azure-message-queue-amqp-02000","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":2,"totalStoryPoints":0,"links":[{"title":"Use Azure Service Bus in Spring applications","href":"https://learn.microsoft.com/azure/developer/java/spring-framework/using-service-bus-in-spring-applications"},{"title":"Azure Service Bus documentation","href":"https://learn.microsoft.com/azure/service-bus-messaging"}],"affectedFiles":[{"description":"The application uses Spring AMQP dependency. To migrate a Java application that uses Spring AMQP to Azure, you can follow these recommendations:\n\n* Provision **Azure Service Bus**: Use Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n* Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n* Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.","files":[{"fileId":"37056","fileName":"pom.xml","occurrences":1},{"fileId":"110816","fileName":"pom.xml","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]}],"information":[{"id":"33d3e857-57c8-4b22-937b-75bf995f79be","name":"JDBC connection found in configuration file","ruleId":"azure-database-config-jdbc-01000","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":2,"totalStoryPoints":0,"links":[{"title":"Use Spring Data JDBC with Azure Database for MySQL","href":"https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-jdbc-with-azure-mysql"},{"title":"Use Spring Data JDBC with Azure Database for PostgreSQL","href":"https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-jdbc-with-azure-postgresql"},{"title":"Bind an Azure Database for PostgreSQL with service connector","href":"https://learn.microsoft.com/azure/service-connector/tutorial-java-spring-mysql"},{"title":"Passwordless connections for Azure services","href":"https://learn.microsoft.com/azure/developer/intro/passwordless-overview"},{"title":"JDBC connection string found in configuration file","href":"https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-apps#databases"},{"title":"Use Spring Data JDBC with Azure SQL Database","href":"https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-jdbc-with-azure-sql-server"}],"affectedFiles":[{"description":"The application uses a JDBC connection string, username or password in the configuration file. To migrate a Java application that uses a JDBC connection string to Azure, you can follow these recommendations:\n\n* **Use a database that is fully managed on Azure**: Use databases such as Azure SQL, Azure Database for MySQL, or Azure Database for PostgreSQL.\n\n* **Connect to databases using Service Connector**: Create service connection using **Service Connector** to connect your application to Azure SQL, Azure Database for MySQL, or Azure Database for PostgreSQL. Service Connector provides a secure and easy way to connect your application to Azure services without having to manage secrets or credentials in your application code.\n\n* **Passwordless connections for Azure services**: Consider using passwordless connections for Azure services. You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.","files":[{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":1},{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"dda7f978-5183-4ae8-9b8f-2ed3c2d6087d","name":"RabbitMQ connection string, username or password found in configuration file","ruleId":"azure-mq-config-rabbitmq-01000","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":6,"totalStoryPoints":0,"links":[{"title":"Service connection in Azure Spring Apps","href":"https://learn.microsoft.com/azure/service-connector/quickstart-portal-spring-cloud-connection"},{"title":"Passwordless connections for Azure services","href":"https://learn.microsoft.com/azure/developer/intro/passwordless-overview"},{"title":"Azure Service Bus documentation","href":"https://learn.microsoft.com/azure/service-bus-messaging"}],"affectedFiles":[{"description":"The application uses a RabbitMQ connection string, username, or password. To migrate a Java application that uses a RabbitMQ connection string to Azure, you can follow these recommendations:\n\n* Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n* **Connect to Azure Service Bus using Service Connector**: Create service connection using **Service Connector** to connect your Azure Service Bus to your azure app. Instead of manually configuring connection string in your applications, you can automatically connect Azure Service Bus using Service Connector.\n\n* **Passwordless connections for Azure services**: Consider using passwordless connections for Azure services. You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.","files":[{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":3},{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":3}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"15ef4ba6-b53d-4a2d-a18a-5f5d552e9526","name":"Maven POM (pom.xml)","ruleId":"DiscoverMavenProjectsRuleProvider_1","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":3,"totalStoryPoints":0,"links":[],"affectedFiles":[{"description":"Maven Project Object Model (POM) File","files":[{"fileId":"28776","fileName":"pom.xml","occurrences":1},{"fileId":"37056","fileName":"pom.xml","occurrences":1},{"fileId":"110816","fileName":"pom.xml","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":[]},{"id":"91d37557-83e0-4d90-bb46-e7c960ae183d","name":"Spring datasource properties detected","ruleId":"configuration-management-0300","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":2,"totalStoryPoints":0,"links":[],"affectedFiles":[{"description":"Spring datasource properties detected","files":[{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":1},{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":[]},{"id":"6285acf2-cbf0-44e5-81e7-641d6ebca180","name":"Embedded framework - Spring Web","ruleId":"embedded-framework-08400","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":1,"totalStoryPoints":0,"links":[],"affectedFiles":[{"description":"The application embeds the Spring Web framework.","files":[{"fileId":"37056","fileName":"pom.xml","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":[]},{"id":"6df69964-d33a-4355-9deb-5e3b76007c1e","name":"Application properties file detected","ruleId":"configuration-management-0200","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":2,"totalStoryPoints":0,"links":[],"affectedFiles":[{"description":"Application properties file detected","files":[{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":1},{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":[]},{"id":"3986ac69-b313-411f-894e-5730a820e277","name":"Embedded Spring Data JPA","ruleId":"database-03100","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":2,"totalStoryPoints":0,"links":[],"affectedFiles":[{"description":"The application embeds Spring Data JPA","files":[{"fileId":"37056","fileName":"pom.xml","occurrences":1},{"fileId":"110816","fileName":"pom.xml","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":[]}],"mandatory":[{"id":"b722abbf-5c7b-44e0-abd4-32cc6ee72d08","name":"AWS S3 usage found","ruleId":"azure-aws-config-s3-03002","effort":{"type":"Complex","points":3,"description":"Complex change with documented solution"},"totalIncidents":34,"totalStoryPoints":102,"links":[{"title":"Azure Blob Storage documentation","href":"https://learn.microsoft.com/azure/storage/blobs"},{"title":"Quickstart: Azure Blob Storage client library for Java","href":"https://learn.microsoft.com/azure/storage/blobs/storage-quickstart-blobs-java"},{"title":"Move your data from AWS S3 to Azure Storage using AzCopy","href":"https://azure.microsoft.com/blog/move-your-data-from-aws-s3-to-azure-storage-using-azcopy"}],"affectedFiles":[{"description":"The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n* Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n* **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n* **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n* **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n* Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n* Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.","files":[{"fileId":"90128","fileName":"com.microsoft.migration.assets.worker.service.S3FileProcessingService","occurrences":17},{"fileId":"82120","fileName":"com.microsoft.migration.assets.worker.config.AwsS3Config","occurrences":4},{"fileId":"82144","fileName":"com.microsoft.migration.assets.service.AwsS3Service","occurrences":9},{"fileId":"57568","fileName":"com.microsoft.migration.assets.config.AwsS3Config","occurrences":4}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"57ca3e53-e0a7-4acb-8817-356cd1c2c3fc","name":"AWS S3 usage found","ruleId":"azure-aws-config-s3-03000","effort":{"type":"Complex","points":3,"description":"Complex change with documented solution"},"totalIncidents":2,"totalStoryPoints":6,"links":[{"title":"Azure Blob Storage documentation","href":"https://learn.microsoft.com/azure/storage/blobs"},{"title":"Quickstart: Azure Blob Storage client library for Java","href":"https://learn.microsoft.com/azure/storage/blobs/storage-quickstart-blobs-java"},{"title":"Move your data from AWS S3 to Azure Storage using AzCopy","href":"https://azure.microsoft.com/blog/move-your-data-from-aws-s3-to-azure-storage-using-azcopy"}],"affectedFiles":[{"description":"The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n* Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n* **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n* **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n* **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n* Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n* Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.","files":[{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":1},{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"a903786c-0ce8-444d-b3e1-f76cb861d068","name":"AWS S3 usage found","ruleId":"azure-aws-config-s3-03003","effort":{"type":"Complex","points":3,"description":"Complex change with documented solution"},"totalIncidents":4,"totalStoryPoints":12,"links":[{"title":"Move your data from AWS S3 to Azure Storage using AzCopy","href":"https://azure.microsoft.com/blog/move-your-data-from-aws-s3-to-azure-storage-using-azcopy"},{"title":"Azure Blob Storage documentation","href":"https://learn.microsoft.com/azure/storage/blobs"},{"title":"Quickstart: Azure Blob Storage client library for Java","href":"https://learn.microsoft.com/azure/storage/blobs/storage-quickstart-blobs-java"}],"affectedFiles":[{"description":"The application contains AWS S3 dependency usage. Consider using Azure Blob Storage instead.\n\n* Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n* **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n* **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n* **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n* Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n* Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.","files":[{"fileId":"110816","fileName":"pom.xml","occurrences":2},{"fileId":"37056","fileName":"pom.xml","occurrences":2}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"59605e7d-9e88-4c13-a7ff-2b34985a037f","name":"AWS region configuration","ruleId":"azure-aws-config-region-02000","effort":{"type":"Complex","points":3,"description":"Complex change with documented solution"},"totalIncidents":4,"totalStoryPoints":12,"links":[{"title":"Azure geographies","href":"https://azure.microsoft.com/explore/global-infrastructure/geographies"}],"affectedFiles":[{"description":"The application contains AWS region configuration.\n\n* Identify **Azure regions**: Determine the Azure regions that align with your application's requirements for availability, latency, compliance, and data residency. Azure provides a wide range of regions globally.\n\n* Update **configuration settings**: Modify the Java application's configuration to replace the AWS region configuration with the corresponding Azure region configuration. Update the code or configuration files to reflect the Azure region names or identifiers.","files":[{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":1},{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":1},{"fileId":"57568","fileName":"com.microsoft.migration.assets.config.AwsS3Config","occurrences":1},{"fileId":"82120","fileName":"com.microsoft.migration.assets.worker.config.AwsS3Config","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]}],"potential":[{"id":"15f12a7d-dcf2-44fa-8057-687207f12f03","name":"PostgreSQL database found","ruleId":"database-01700","effort":{"type":"Complex","points":3,"description":"Complex change with documented solution"},"totalIncidents":2,"totalStoryPoints":6,"links":[{"title":"Azure Database Migration Service documentation","href":"https://learn.microsoft.com/azure/dms"},{"title":"Backup and restore in Azure Database for PostgreSQL","href":"https://learn.microsoft.com/azure/postgresql/single-server/concepts-backup"},{"title":"Azure PostgreSQL Flexible Server documentation","href":"https://learn.microsoft.com/azure/postgresql/flexible-server"},{"title":"Azure Monitor documentation","href":"https://learn.microsoft.com/azure/azure-monitor"},{"title":"Microsoft Defender for Cloud","href":"https://learn.microsoft.com/azure/defender-for-cloud"}],"affectedFiles":[{"description":"To migrate a Java application that uses a PostgreSQL database to Azure, you can follow these recommendations:\n\n* Use a managed **Azure Database for PostgreSQL Flexible Server**: For that create a managed PostgreSQL Flexible Server database in Azure and choose the appropriate pricing tier based on your application's requirements for performance, storage, and availability.\n\n* **Migrate** the existing PostgreSQL database: For that you can use the Azure Database Migration Service (DMS) to perform an online migration with minimal downtime.\n\n* Update the application's **database connection** details: Modify the Java application's configuration to point to the newly provisioned Azure Database for PostgreSQL. Update the connection string, hostname, port, username, and password information accordingly.\n\n* Enable **monitoring and diagnostics**: Utilize Azure Monitor to gain insights into the performance and health of your Java application and the underlying PostgreSQL database. Set up metrics, alerts, and log analytics to proactively identify and resolve issues.\n\n* Implement **security** measures: Apply security best practices to protect your Java application and the PostgreSQL database. This includes implementing authentication and authorization mechanisms with passwordless connections and leveraging Microsoft Defender for Cloud for threat detection and vulnerability assessments.\n\n* **Backup** your data: Azure Database for PostgreSQL provides automated backups by default. You can configure the retention period for backups based on your requirements. You can also enable geo-redundant backups, if needed, to enhance data durability and availability.","files":[{"fileId":"110816","fileName":"pom.xml","occurrences":1},{"fileId":"37056","fileName":"pom.xml","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":[]},{"id":"65566bfd-af8a-4daa-98d6-e126efc6a497","name":"Password found in configuration file","ruleId":"azure-password-01000","effort":{"type":"Complex","points":3,"description":"Complex change with documented solution"},"totalIncidents":4,"totalStoryPoints":12,"links":[{"title":"Azure Spring Boot Starter for Azure Key Vault Secrets","href":"https://search.maven.org/artifact/com.azure.spring/azure-spring-boot-starter-keyvault-secrets"},{"title":"Azure Key Vault documentation","href":"https://learn.microsoft.com/azure/key-vault"},{"title":"Passwordless connections for Azure services","href":"https://learn.microsoft.com/azure/developer/intro/passwordless-overview"},{"title":"Read a secret from Azure Key Vault in a Spring Boot application","href":"https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-boot-starter-java-app-with-azure-key-vault"},{"title":"Password found in configuration file","href":"https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-apps#inventory-configuration-sources-and-secrets"}],"affectedFiles":[{"description":"Using clear passwords in property files is a security risk, as they can be easily compromised if the files are accessed by unauthorized individuals. To enhance the security of your application, it is recommended to employ secure credential management practices.\n\n* **Azure Key Vault**: Utilize Azure Key Vault to securely store and manage your application's passwords and other sensitive credentials. Azure Key Vault provides a centralized and highly secure location for storing secrets, keys, and certificates.\n\n* **Passwordless connections**: You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.","files":[{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":2},{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":2}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]}]}},{"applicationId":"127176","issues":{"optional":[{"id":"f9209447-c2dd-4da0-984b-71c0ee8fffdf","name":"Spring RabbitMQ usage found in code","ruleId":"azure-message-queue-rabbitmq-01000","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":33,"totalStoryPoints":0,"links":[{"title":"Azure Service Bus documentation","href":"https://learn.microsoft.com/azure/service-bus-messaging"},{"title":"Use Azure Service Bus in Spring applications","href":"https://learn.microsoft.com/azure/developer/java/spring-framework/using-service-bus-in-spring-applications"}],"affectedFiles":[{"description":"The application uses Spring RabbitMQ based on Spring AMQP in code. To migrate a Java application that uses Spring RabbitMQ to Azure, you can follow these recommendations:\n\n* Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n* Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n* Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.","files":[{"fileId":"65640","fileName":"com.microsoft.migration.assets.worker.config.RabbitConfig","occurrences":9},{"fileId":"73920","fileName":"com.microsoft.migration.assets.worker.service.AbstractFileProcessingService","occurrences":2},{"fileId":"123016","fileName":"com.microsoft.migration.assets.worker.WorkerApplication","occurrences":2},{"fileId":"45248","fileName":"com.microsoft.migration.assets.service.BackupMessageProcessor","occurrences":2},{"fileId":"61664","fileName":"com.microsoft.migration.assets.config.RabbitConfig","occurrences":9},{"fileId":"82144","fileName":"com.microsoft.migration.assets.service.AwsS3Service","occurrences":3},{"fileId":"86152","fileName":"com.microsoft.migration.assets.AssetsManagerApplication","occurrences":2},{"fileId":"98440","fileName":"com.microsoft.migration.assets.service.LocalFileStorageService","occurrences":4}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"3031204e-540a-43ba-b31a-6183322779c1","name":"Spring AMQP usage found in code","ruleId":"azure-message-queue-amqp-01000","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":75,"totalStoryPoints":0,"links":[{"title":"Use Azure Service Bus in Spring applications","href":"https://learn.microsoft.com/azure/developer/java/spring-framework/using-service-bus-in-spring-applications"},{"title":"Azure Service Bus documentation","href":"https://learn.microsoft.com/azure/service-bus-messaging"}],"affectedFiles":[{"description":"The application uses Spring AMQP in code. To migrate a Java application that uses Spring AMQP to Azure, you can follow these recommendations:\n\n* Provision **Azure Service Bus**: Use Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n* Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n* Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.","files":[{"fileId":"65640","fileName":"com.microsoft.migration.assets.worker.config.RabbitConfig","occurrences":29},{"fileId":"73920","fileName":"com.microsoft.migration.assets.worker.service.AbstractFileProcessingService","occurrences":3},{"fileId":"123016","fileName":"com.microsoft.migration.assets.worker.WorkerApplication","occurrences":2},{"fileId":"45248","fileName":"com.microsoft.migration.assets.service.BackupMessageProcessor","occurrences":3},{"fileId":"61664","fileName":"com.microsoft.migration.assets.config.RabbitConfig","occurrences":29},{"fileId":"82144","fileName":"com.microsoft.migration.assets.service.AwsS3Service","occurrences":3},{"fileId":"86152","fileName":"com.microsoft.migration.assets.AssetsManagerApplication","occurrences":2},{"fileId":"98440","fileName":"com.microsoft.migration.assets.service.LocalFileStorageService","occurrences":4}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"1d3b3f4d-289a-4329-8f10-4c3d5ca17e84","name":"Relative path found","ruleId":"azure-file-system-02000","effort":{"type":"Redesign","points":5,"description":"Requires re-design or library change"},"totalIncidents":2,"totalStoryPoints":10,"links":[{"title":"Azure Storage documentation","href":"https://learn.microsoft.com/azure/storage"},{"title":"Azure Monitor Logs overview","href":"https://learn.microsoft.com/azure/azure-monitor/logs/data-platform-logs"},{"title":"Azure Cache for Redis documentation","href":"https://learn.microsoft.com/azure/azure-cache-for-redis"},{"title":"Azure App Configuration documentation","href":"https://learn.microsoft.com/azure/azure-app-configuration"},{"title":"Relative path found in the application","href":"https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-cloud-to-azure-spring-apps?pivots=sc-standard-tier#determine-whether-and-how-the-file-system-is-used"}],"affectedFiles":[{"description":"Relative path found in the application. An application running inside a container could lose access to a file in local storage.\nTo migrate a Java application that uses file system to Azure:\n\n* **Identify the usage of the file system**: Find any instances where your services write to and/or read from the local file system. Identify where short-term/temporary files are written and read and where long-lived files are written and read.\n\nThe following recommendations depend on the function of the file in local storage:\n\n* **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.\n\n* **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.\n\n* **Caching**: Use Azure Cache for Redis as a cache backing service.\n\n* **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.","files":[{"fileId":"90312","fileName":"com.microsoft.migration.assets.worker.service.LocalFileProcessingService","occurrences":1},{"fileId":"98440","fileName":"com.microsoft.migration.assets.service.LocalFileStorageService","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"38bd6efc-0039-4779-9e12-082fbf3bca43","name":"Spring AMQP dependency found","ruleId":"azure-message-queue-amqp-02000","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":2,"totalStoryPoints":0,"links":[{"title":"Azure Service Bus documentation","href":"https://learn.microsoft.com/azure/service-bus-messaging"},{"title":"Use Azure Service Bus in Spring applications","href":"https://learn.microsoft.com/azure/developer/java/spring-framework/using-service-bus-in-spring-applications"}],"affectedFiles":[{"description":"The application uses Spring AMQP dependency. To migrate a Java application that uses Spring AMQP to Azure, you can follow these recommendations:\n\n* Provision **Azure Service Bus**: Use Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n* Update the application's **messaging connection** details: Modify the Java application's configuration updating the connection information and message queues/topics.\n\n* Configure Azure Service Bus **queues/topics**: Create appropriate queues or topics in Azure Service Bus to align with your application's messaging requirements. Configure access control and security settings as needed.","files":[{"fileId":"110816","fileName":"pom.xml","occurrences":1},{"fileId":"37056","fileName":"pom.xml","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"f74543ae-f6e7-4e56-9eba-358bf96e8322","name":"RabbitMQ connection string, username or password found in configuration file","ruleId":"azure-message-queue-config-rabbitmq-01000","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":6,"totalStoryPoints":0,"links":[{"title":"Azure Service Bus documentation","href":"https://learn.microsoft.com/azure/service-bus-messaging"},{"title":"Service connection in Azure Spring Apps","href":"https://learn.microsoft.com/azure/service-connector/quickstart-portal-spring-cloud-connection"},{"title":"Passwordless connections for Azure services","href":"https://learn.microsoft.com/azure/developer/intro/passwordless-overview"}],"affectedFiles":[{"description":"The application uses a RabbitMQ connection string, username, or password. To migrate a Java application that uses a RabbitMQ connection string to Azure, you can follow these recommendations:\n\n* Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n* **Connect to Azure Service Bus using Service Connector**: Create service connection using **Service Connector** to connect your Azure Service Bus to your azure app. Instead of manually configuring connection string in your applications, you can automatically connect Azure Service Bus using Service Connector.\n\n* **Passwordless connections for Azure services**: Consider using passwordless connections for Azure services. You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.","files":[{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":3},{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":3}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]}],"information":[{"id":"62bbaac4-7854-4e95-b24a-77719e770e91","name":"JDBC connection found in configuration file","ruleId":"azure-database-config-jdbc-01000","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":2,"totalStoryPoints":0,"links":[{"title":"Use Spring Data JDBC with Azure Database for PostgreSQL","href":"https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-jdbc-with-azure-postgresql"},{"title":"Bind an Azure Database for PostgreSQL with service connector","href":"https://learn.microsoft.com/azure/service-connector/tutorial-java-spring-mysql"},{"title":"Passwordless connections for Azure services","href":"https://learn.microsoft.com/azure/developer/intro/passwordless-overview"},{"title":"Use Spring Data JDBC with Azure Database for MySQL","href":"https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-jdbc-with-azure-mysql"},{"title":"Use Spring Data JDBC with Azure SQL Database","href":"https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-data-jdbc-with-azure-sql-server"},{"title":"JDBC connection string found in configuration file","href":"https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-apps#databases"}],"affectedFiles":[{"description":"The application uses a JDBC connection string, username or password in the configuration file. To migrate a Java application that uses a JDBC connection string to Azure, you can follow these recommendations:\n\n* **Use a database that is fully managed on Azure**: Use databases such as Azure SQL, Azure Database for MySQL, or Azure Database for PostgreSQL.\n\n* **Connect to databases using Service Connector**: Create service connection using **Service Connector** to connect your application to Azure SQL, Azure Database for MySQL, or Azure Database for PostgreSQL. Service Connector provides a secure and easy way to connect your application to Azure services without having to manage secrets or credentials in your application code.\n\n* **Passwordless connections for Azure services**: Consider using passwordless connections for Azure services. You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.","files":[{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":1},{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"54ff7f4a-76dc-487b-bd78-795c0c2a0fa0","name":"RabbitMQ connection string, username or password found in configuration file","ruleId":"azure-mq-config-rabbitmq-01000","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":6,"totalStoryPoints":0,"links":[{"title":"Azure Service Bus documentation","href":"https://learn.microsoft.com/azure/service-bus-messaging"},{"title":"Service connection in Azure Spring Apps","href":"https://learn.microsoft.com/azure/service-connector/quickstart-portal-spring-cloud-connection"},{"title":"Passwordless connections for Azure services","href":"https://learn.microsoft.com/azure/developer/intro/passwordless-overview"}],"affectedFiles":[{"description":"The application uses a RabbitMQ connection string, username, or password. To migrate a Java application that uses a RabbitMQ connection string to Azure, you can follow these recommendations:\n\n* Provision **Azure Service Bus**: Replace RabbitMQ with Azure Service Bus, a fully managed messaging service that offers reliable message queuing and publish/subscribe capabilities.\n\n* **Connect to Azure Service Bus using Service Connector**: Create service connection using **Service Connector** to connect your Azure Service Bus to your azure app. Instead of manually configuring connection string in your applications, you can automatically connect Azure Service Bus using Service Connector.\n\n* **Passwordless connections for Azure services**: Consider using passwordless connections for Azure services. You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.","files":[{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":3},{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":3}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"7bdec6e1-26f1-48f0-bd5a-ae46a11d7bfe","name":"Maven POM (pom.xml)","ruleId":"DiscoverMavenProjectsRuleProvider_1","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":3,"totalStoryPoints":0,"links":[],"affectedFiles":[{"description":"Maven Project Object Model (POM) File","files":[{"fileId":"28776","fileName":"pom.xml","occurrences":1},{"fileId":"37056","fileName":"pom.xml","occurrences":1},{"fileId":"110816","fileName":"pom.xml","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":[]},{"id":"71b58beb-701a-4f03-bbaa-5ab387a22a8f","name":"Spring datasource properties detected","ruleId":"configuration-management-0300","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":2,"totalStoryPoints":0,"links":[],"affectedFiles":[{"description":"Spring datasource properties detected","files":[{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":1},{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":[]},{"id":"b83d9e51-0ee5-49fc-9d92-472ccfbdf75a","name":"Embedded framework - Spring Web","ruleId":"embedded-framework-08400","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":1,"totalStoryPoints":0,"links":[],"affectedFiles":[{"description":"The application embeds the Spring Web framework.","files":[{"fileId":"37056","fileName":"pom.xml","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":[]},{"id":"ae9efedc-92c0-44b2-8cde-d9a77f2c29e9","name":"Application properties file detected","ruleId":"configuration-management-0200","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":2,"totalStoryPoints":0,"links":[],"affectedFiles":[{"description":"Application properties file detected","files":[{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":1},{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":[]},{"id":"de03a5da-f370-42a0-945a-9c7ba6d6f309","name":"Embedded Spring Data JPA","ruleId":"database-03100","effort":{"type":"Info","points":0,"description":"Info"},"totalIncidents":2,"totalStoryPoints":0,"links":[],"affectedFiles":[{"description":"The application embeds Spring Data JPA","files":[{"fileId":"37056","fileName":"pom.xml","occurrences":1},{"fileId":"110816","fileName":"pom.xml","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":[]}],"mandatory":[{"id":"40fc0302-5207-474b-b2d2-ff4a6aafeaa4","name":"AWS S3 usage found","ruleId":"azure-aws-config-s3-03002","effort":{"type":"Complex","points":3,"description":"Complex change with documented solution"},"totalIncidents":34,"totalStoryPoints":102,"links":[{"title":"Move your data from AWS S3 to Azure Storage using AzCopy","href":"https://azure.microsoft.com/blog/move-your-data-from-aws-s3-to-azure-storage-using-azcopy"},{"title":"Azure Blob Storage documentation","href":"https://learn.microsoft.com/azure/storage/blobs"},{"title":"Quickstart: Azure Blob Storage client library for Java","href":"https://learn.microsoft.com/azure/storage/blobs/storage-quickstart-blobs-java"}],"affectedFiles":[{"description":"The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n* Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n* **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n* **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n* **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n* Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n* Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.","files":[{"fileId":"82120","fileName":"com.microsoft.migration.assets.worker.config.AwsS3Config","occurrences":4},{"fileId":"90128","fileName":"com.microsoft.migration.assets.worker.service.S3FileProcessingService","occurrences":17},{"fileId":"57568","fileName":"com.microsoft.migration.assets.config.AwsS3Config","occurrences":4},{"fileId":"82144","fileName":"com.microsoft.migration.assets.service.AwsS3Service","occurrences":9}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"b2da0e17-73db-4308-b3f8-675e5aea0af2","name":"AWS region configuration","ruleId":"azure-aws-config-region-02000","effort":{"type":"Complex","points":3,"description":"Complex change with documented solution"},"totalIncidents":4,"totalStoryPoints":12,"links":[{"title":"Azure geographies","href":"https://azure.microsoft.com/explore/global-infrastructure/geographies"}],"affectedFiles":[{"description":"The application contains AWS region configuration.\n\n* Identify **Azure regions**: Determine the Azure regions that align with your application's requirements for availability, latency, compliance, and data residency. Azure provides a wide range of regions globally.\n\n* Update **configuration settings**: Modify the Java application's configuration to replace the AWS region configuration with the corresponding Azure region configuration. Update the code or configuration files to reflect the Azure region names or identifiers.","files":[{"fileId":"82120","fileName":"com.microsoft.migration.assets.worker.config.AwsS3Config","occurrences":1},{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":1},{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":1},{"fileId":"57568","fileName":"com.microsoft.migration.assets.config.AwsS3Config","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"f16eba1f-3f40-4d7d-abc2-f9bcc906d954","name":"AWS S3 usage found","ruleId":"azure-aws-config-s3-03003","effort":{"type":"Complex","points":3,"description":"Complex change with documented solution"},"totalIncidents":4,"totalStoryPoints":12,"links":[{"title":"Move your data from AWS S3 to Azure Storage using AzCopy","href":"https://azure.microsoft.com/blog/move-your-data-from-aws-s3-to-azure-storage-using-azcopy"},{"title":"Azure Blob Storage documentation","href":"https://learn.microsoft.com/azure/storage/blobs"},{"title":"Quickstart: Azure Blob Storage client library for Java","href":"https://learn.microsoft.com/azure/storage/blobs/storage-quickstart-blobs-java"}],"affectedFiles":[{"description":"The application contains AWS S3 dependency usage. Consider using Azure Blob Storage instead.\n\n* Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n* **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n* **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n* **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n* Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n* Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.","files":[{"fileId":"110816","fileName":"pom.xml","occurrences":2},{"fileId":"37056","fileName":"pom.xml","occurrences":2}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]},{"id":"5dd22d39-6a26-4254-8fa4-b40e04f487ce","name":"AWS S3 usage found","ruleId":"azure-aws-config-s3-03000","effort":{"type":"Complex","points":3,"description":"Complex change with documented solution"},"totalIncidents":2,"totalStoryPoints":6,"links":[{"title":"Azure Blob Storage documentation","href":"https://learn.microsoft.com/azure/storage/blobs"},{"title":"Quickstart: Azure Blob Storage client library for Java","href":"https://learn.microsoft.com/azure/storage/blobs/storage-quickstart-blobs-java"},{"title":"Move your data from AWS S3 to Azure Storage using AzCopy","href":"https://azure.microsoft.com/blog/move-your-data-from-aws-s3-to-azure-storage-using-azcopy"}],"affectedFiles":[{"description":"The application contains AWS S3 usage. Consider using Azure Blob Storage instead.\n\n* Provision **Azure Blob Storage**: Create an Azure Blob Storage account in the Azure portal. Choose the appropriate storage tier (Hot, Cool, or Archive) based on your application's data access patterns and cost considerations.\n\n* **Update application code**: Modify the Java application's code to replace AWS SDK calls with the equivalent Azure Storage SDK calls for Azure Blob Storage. Update the code to authenticate and interact with Azure Blob Storage using the Azure SDK for Java.\n\n* **Map S3 functionality** to Azure Blob Storage: Understand the differences between AWS S3 and Azure Blob Storage, and adjust your application logic accordingly. Map S3 concepts (buckets, objects, permissions, etc.) to their Azure Blob Storage equivalents (containers, blobs, shared access signatures, etc.).\n\n* **Migrate data** from S3 to Azure Blob Storage: Plan and execute the migration of your data from AWS S3 to Azure Blob Storage. You can use Azure Storage Data Transfer Tool, AzCopy, or other migration tools to copy the data from S3 buckets to Azure Blob Storage containers.\n\n* Update **access permissions**: Adjust the access permissions and policies in Azure Blob Storage to match your application's requirements. Azure provides various options for controlling access, including shared access signatures (SAS), Azure AD authentication, and role-based access control (RBAC).\n\n* Validate functionality and **performance**: Thoroughly test the updated application to ensure that it can read from and write to Azure Blob Storage correctly. Validate the performance of data transfer and any other operations to ensure they meet your application's requirements.","files":[{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":1},{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]}],"potential":[{"id":"5f8a4603-2d5b-42c8-9dea-e13147c8f187","name":"PostgreSQL database found","ruleId":"database-01700","effort":{"type":"Complex","points":3,"description":"Complex change with documented solution"},"totalIncidents":2,"totalStoryPoints":6,"links":[{"title":"Azure Database Migration Service documentation","href":"https://learn.microsoft.com/azure/dms"},{"title":"Backup and restore in Azure Database for PostgreSQL","href":"https://learn.microsoft.com/azure/postgresql/single-server/concepts-backup"},{"title":"Azure PostgreSQL Flexible Server documentation","href":"https://learn.microsoft.com/azure/postgresql/flexible-server"},{"title":"Azure Monitor documentation","href":"https://learn.microsoft.com/azure/azure-monitor"},{"title":"Microsoft Defender for Cloud","href":"https://learn.microsoft.com/azure/defender-for-cloud"}],"affectedFiles":[{"description":"To migrate a Java application that uses a PostgreSQL database to Azure, you can follow these recommendations:\n\n* Use a managed **Azure Database for PostgreSQL Flexible Server**: For that create a managed PostgreSQL Flexible Server database in Azure and choose the appropriate pricing tier based on your application's requirements for performance, storage, and availability.\n\n* **Migrate** the existing PostgreSQL database: For that you can use the Azure Database Migration Service (DMS) to perform an online migration with minimal downtime.\n\n* Update the application's **database connection** details: Modify the Java application's configuration to point to the newly provisioned Azure Database for PostgreSQL. Update the connection string, hostname, port, username, and password information accordingly.\n\n* Enable **monitoring and diagnostics**: Utilize Azure Monitor to gain insights into the performance and health of your Java application and the underlying PostgreSQL database. Set up metrics, alerts, and log analytics to proactively identify and resolve issues.\n\n* Implement **security** measures: Apply security best practices to protect your Java application and the PostgreSQL database. This includes implementing authentication and authorization mechanisms with passwordless connections and leveraging Microsoft Defender for Cloud for threat detection and vulnerability assessments.\n\n* **Backup** your data: Azure Database for PostgreSQL provides automated backups by default. You can configure the retention period for backups based on your requirements. You can also enable geo-redundant backups, if needed, to enhance data durability and availability.","files":[{"fileId":"110816","fileName":"pom.xml","occurrences":1},{"fileId":"37056","fileName":"pom.xml","occurrences":1}]}],"sourceTechnologies":[],"targetTechnologies":[]},{"id":"041b090d-9898-4832-9069-58b61b376c0b","name":"Password found in configuration file","ruleId":"azure-password-01000","effort":{"type":"Complex","points":3,"description":"Complex change with documented solution"},"totalIncidents":4,"totalStoryPoints":12,"links":[{"title":"Azure Spring Boot Starter for Azure Key Vault Secrets","href":"https://search.maven.org/artifact/com.azure.spring/azure-spring-boot-starter-keyvault-secrets"},{"title":"Azure Key Vault documentation","href":"https://learn.microsoft.com/azure/key-vault"},{"title":"Passwordless connections for Azure services","href":"https://learn.microsoft.com/azure/developer/intro/passwordless-overview"},{"title":"Read a secret from Azure Key Vault in a Spring Boot application","href":"https://docs.microsoft.com/azure/developer/java/spring-framework/configure-spring-boot-starter-java-app-with-azure-key-vault"},{"title":"Password found in configuration file","href":"https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-apps#inventory-configuration-sources-and-secrets"}],"affectedFiles":[{"description":"Using clear passwords in property files is a security risk, as they can be easily compromised if the files are accessed by unauthorized individuals. To enhance the security of your application, it is recommended to employ secure credential management practices.\n\n* **Azure Key Vault**: Utilize Azure Key Vault to securely store and manage your application's passwords and other sensitive credentials. Azure Key Vault provides a centralized and highly secure location for storing secrets, keys, and certificates.\n\n* **Passwordless connections**: You can provide an additional layer of security and convenience for accessing resources in Azure by eliminating the need for passwords. This way you can reduce the risk of password-related vulnerabilities, such as weak passwords or password theft.","files":[{"fileId":"123104","fileName":"src/main/resources/application.properties","occurrences":2},{"fileId":"45176","fileName":"src/main/resources/application.properties","occurrences":2}]}],"sourceTechnologies":[],"targetTechnologies":["azure-container-apps"]}]}}]