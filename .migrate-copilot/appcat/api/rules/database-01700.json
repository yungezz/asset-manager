{"id":"database-01700","content":"<rule id=\"database-01700\" xmlns=\"http://windup.jboss.org/schema/jboss-ruleset\">\n            <when>\n                <or>\n                    <file filename=\"{*}postgresql{*}.jar\"/>\n                    <project>\n                        <artifact artifactId=\"{*}\" groupId=\"{*}postgresql{*}\"/>\n                    </project>\n                    <filecontent filename=\"build.gradle\" pattern=\"postgresql\"/>\n                </or>\n            </when>\n            <perform>\n                <hint category-id=\"potential\" effort=\"3\" title=\"PostgreSQL database found\">\n                    <message>\n                        To migrate a Java application that uses a PostgreSQL database to Azure, you can follow these recommendations:\n\n                        * Use a managed **Azure Database for PostgreSQL Flexible Server**: For that create a managed PostgreSQL Flexible Server database in Azure and choose the appropriate pricing tier based on your application's requirements for performance, storage, and availability.\n\n                        * **Migrate** the existing PostgreSQL database: For that you can use the Azure Database Migration Service (DMS) to perform an online migration with minimal downtime.\n\n                        * Update the application's **database connection** details: Modify the Java application's configuration to point to the newly provisioned Azure Database for PostgreSQL. Update the connection string, hostname, port, username, and password information accordingly.\n\n                        * Enable **monitoring and diagnostics**: Utilize Azure Monitor to gain insights into the performance and health of your Java application and the underlying PostgreSQL database. Set up metrics, alerts, and log analytics to proactively identify and resolve issues.\n\n                        * Implement **security** measures: Apply security best practices to protect your Java application and the PostgreSQL database. This includes implementing authentication and authorization mechanisms with passwordless connections and leveraging Microsoft Defender for Cloud for threat detection and vulnerability assessments.\n\n                        * **Backup** your data: Azure Database for PostgreSQL provides automated backups by default. You can configure the retention period for backups based on your requirements. You can also enable geo-redundant backups, if needed, to enhance data durability and availability.\n                    </message>\n                    <link href=\"https://learn.microsoft.com/azure/postgresql/flexible-server\" title=\"Azure PostgreSQL Flexible Server documentation\"/>\n                    <link href=\"https://learn.microsoft.com/azure/dms\" title=\"Azure Database Migration Service documentation\"/>\n                    <link href=\"https://learn.microsoft.com/azure/azure-monitor\" title=\"Azure Monitor documentation\"/>\n                    <link href=\"https://learn.microsoft.com/azure/defender-for-cloud\" title=\"Microsoft Defender for Cloud\"/>\n                    <link href=\"https://learn.microsoft.com/azure/postgresql/single-server/concepts-backup\" title=\"Backup and restore in Azure Database for PostgreSQL\"/>\n                </hint>\n                <technology-tag level=\"INFORMATIONAL\">PostgreSQL Driver</technology-tag>\n            </perform>\n        </rule>"}