{"id":"azure-java-version-01000","content":"<rule id=\"azure-java-version-01000\" xmlns=\"http://windup.jboss.org/schema/jboss-ruleset\">\n            <when>\n                <xmlfile as=\"result\" in=\"pom.xml\" matches=\"//m:java.version[windup:matches(text(), '{v}')]\">\n                    <namespace prefix=\"m\" uri=\"http://maven.apache.org/POM/4.0.0\"/>\n                </xmlfile>\n            </when>\n            <perform>\n                <iteration over=\"result\">\n                    <hint category-id=\"mandatory\" effort=\"3\" title=\"Non-LTS version Java\">\n                        <message>\n                            The application is using non-LTS version Java. JDK on LTS version is recommended, i.e. **Java 8**, **Java 11** or **Java 17**.\n\n                            * Choose a **supported Java version**: Determine the most suitable supported Java version provided by Azure. As of now, Azure supports Java 8, Java 11, and Java 17.\n\n                            * **Update Java Development Kit** (JDK): Update the JDK in your development environment and build pipelines to the chosen supported version. This ensures that your application is built and packaged using the compatible Java version.\n\n                            * Address **code compatibility**: Review your application's codebase for any potential compatibility issues with the target Java version. Update deprecated APIs or features, address any language or library changes, and ensure that your code follows best practices and standards.\n\n                            * **Test thoroughly**: Execute a comprehensive testing process to verify the compatibility and functionality of your application with the new Java version. Perform unit tests, integration tests, and system tests to validate that all components and dependencies work as expected.\n\n                            * **Monitor performance**: Once migrated to the supported Java version, closely monitor the performance of your application in the Azure environment. Utilize Azure Monitoring tools and logging mechanisms to identify any performance bottlenecks or issues that may arise due to the Java version change.\n                        </message>\n                        <link href=\"https://learn.microsoft.com/azure/developer/java/fundamentals/java-support-on-azure#supported-java-versions-and-update-schedule\" title=\"Supported Java versions and update schedule\"/>\n                        <link href=\"https://learn.microsoft.com/java/openjdk\" title=\"Microsoft Build of OpenJDK\"/>\n                        <link href=\"https://learn.microsoft.com/azure/developer/java/fundamentals\" title=\"Java on Azure developer tools documentation\"/>\n                        <link href=\"https://learn.microsoft.com/azure/azure-monitor\" title=\"Azure Monitor documentation\"/>\n                    </hint>\n                </iteration>\n            </perform>\n            <where param=\"v\">\n                <matches pattern=\"(9|10|12|13|14|15|16|19|20).*\"/>\n            </where>\n        </rule>"}