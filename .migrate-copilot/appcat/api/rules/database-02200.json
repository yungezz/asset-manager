{"id":"database-02200","content":"<rule id=\"database-02200\" xmlns=\"http://windup.jboss.org/schema/jboss-ruleset\">\n            <when>\n                <or>\n                    <file filename=\"{*}cassandra{*}.jar\"/>\n                    <file filename=\"{*}hector{*}.jar\"/>\n                    <file filename=\"{*}astyanax{*}.jar\"/>\n                    <file filename=\"{*}phantom-dsl{*}.jar\"/>\n                    <file filename=\"{*}cql{*}.jar\"/>\n                    <file filename=\"{*}hecuba-client{*}.jar\"/>\n                    <file filename=\"{*}c-star-path{*}.jar\"/>\n                    <file filename=\"{*}scale7-pelops{*}.jar\"/>\n                </or>\n            </when>\n            <perform>\n                <hint category-id=\"potential\" effort=\"3\" title=\"Cassandra database found\">\n                    <message>\n                        To migrate a Java application that uses a Cassandra database to Azure, you can follow these recommendations:\n\n                        * Use an **Azure Managed Instance for Apache Cassandra**: Create an Azure Managed Instance for Apache Cassandra database and choose the appropriate pricing tier based on your application's requirements for performance, storage, and availability.\n\n                        * **Migrate your Cassandra data**: Take a backup of your Cassandra data and restore the backup to Azure Managed Instance for Apache Cassandra. You can use Azure Database Migration Service to facilitate the backup and restore process.\n\n                        * Update the application's **database connection** details: Modify your Java application's configuration to point to the new Azure Managed Instance for Apache Cassandra. Update the connection string and authentication details in your application code to ensure connectivity to the Azure Managed Instance for Apache Cassandra.\n\n                        * Enable **monitoring and diagnostics**: Utilize Azure Monitor to gain insights into the performance and health of your Java application and the underlying Azure Managed Instance for Apache Cassandra database. Set up metrics, alerts, and log analytics to proactively identify and resolve issues.\n\n                        * Implement **security** measures: Apply security best practices to protect your Java application and the Azure Managed Instance for Apache Cassandra database. This includes implementing authentication and authorization mechanisms with passwordless connections and leveraging Microsoft Defender for Cloud for threat detection and vulnerability assessments.\n\n                        * **Backup** your data: Azure Managed Instance for Apache Cassandra provides built-in backup functionality that allows you to create automated backups of your data. Enable backup for your account and configure the backup retention policy to specify how long the backups should be retained.\n                    </message>\n                    <link href=\"https://learn.microsoft.com/azure/managed-instance-apache-cassandra\" title=\"Azure Managed Instance for Apache Cassandra documentation\"/>\n                    <link href=\"https://learn.microsoft.com/azure/dms\" title=\"Azure Database Migration Service documentation\"/>\n                    <link href=\"https://learn.microsoft.com/azure/azure-monitor\" title=\"Azure Monitor documentation\"/>\n                    <link href=\"https://learn.microsoft.com/azure/defender-for-cloud\" title=\"Microsoft Defender for Cloud\"/>\n                </hint>\n                <technology-tag level=\"INFORMATIONAL\">Cassandra Client</technology-tag>\n            </perform>\n        </rule>"}