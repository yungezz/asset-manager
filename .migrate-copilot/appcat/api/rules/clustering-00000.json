{"id":"clustering-00000","content":"<rule id=\"clustering-00000\" xmlns=\"http://windup.jboss.org/schema/jboss-ruleset\">\n            <when>\n              <xmlfile matches=\"/w:web-app/w:distributable\">\n                  <namespace prefix=\"w\" uri=\"http://java.sun.com/xml/ns/javaee\"/>\n              </xmlfile>\n            </when>\n            <perform>\n                <hint category-id=\"mandatory\" effort=\"5\" title=\"Distributed Environments found\">\n                    <message>\n                        To migrate a distributed application that is clustered around several servers to Azure, you can follow these recommendations:\n\n                        * **Configure multiple instances **: Deploy your Java application to Azure App Service and configure multiple instances within the same App Service Plan to create a cluster-like setup. Azure App Service automatically load-balances incoming requests across the available instances, ensuring scalability and high availability.\n\n                        * **Manage sessions in a clustered environment**: Consider using an external session store such as Azure Cache for Redis. Configure your Java application to connect to the Azure Cache for Redis and to replicate sessions across the instances.\n                    </message>\n                    <link href=\"https://learn.microsoft.com/azure/azure-cache-for-redis\" title=\"Azure Cache for Redis Documentation\"/>\n                    <link href=\"https://learn.microsoft.com/azure/app-service/environment/app-service-app-service-environment-custom-settings\" title=\"Custom configuration settings for App Service Environments\"/>\n                    <link href=\"https://learn.microsoft.com/azure/developer/java/migration/migrate-tomcat-to-azure-container-apps#identify-session-persistence-mechanism\" title=\"Identify session persistence mechanism\"/>\n                </hint>\n                <technology-tag level=\"INFORMATIONAL\">Clustering Web Session</technology-tag>\n            </perform>\n        </rule>"}