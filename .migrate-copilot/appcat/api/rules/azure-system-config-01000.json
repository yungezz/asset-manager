{"id":"azure-system-config-01000","content":"<rule id=\"azure-system-config-01000\" xmlns=\"http://windup.jboss.org/schema/jboss-ruleset\">\n            <when>\n                <or>\n                    <javaclass references=\"java.lang.System.getenv({*})\">\n                        <location>METHOD_CALL</location>\n                    </javaclass>\n                    <javaclass references=\"java.lang.System.getProperty({*})\">\n                        <location>METHOD_CALL</location>\n                    </javaclass>\n                    <javaclass references=\"java.lang.System.setProperty({*})\">\n                        <location>METHOD_CALL</location>\n                    </javaclass>\n                    <javaclass references=\"java.lang.System.setProperties({*})\">\n                        <location>METHOD_CALL</location>\n                    </javaclass>\n                </or>\n            </when>\n            <perform>\n                <hint category-id=\"optional\" effort=\"1\" title=\"Environment variables/system properties\">\n                    <message>\n                        The application uses environment variables/system properties.\n                        To migrate a Java application that uses environment variables/system properties to Azure, you can follow these recommendations:\n                        \n                        * **Identify environment variables and system properties**: Review the usage of environment variables and system properties and externalize them.\n\n                        * **Add environment variables in Azure**: You can inject any per-service configuration settings into each service as environment variables.\n\n                        * **Define system properties in JVM options**: Any system properties that the code depends on will need to be defined in JVM options.\n\n                        * Consider using**Azure App Configuration**: You can also replace the usage of environment variables with **Azure App Configuration**. By migrating to Azure App Configuration, you can centralize and manage your application's configuration settings, making it easier to maintain and update them. Azure App Configuration provides features like versioning, dynamic updates, and integration with Azure Key Vault for secure storage of sensitive configuration values.\n                    </message>\n                    <link href=\"https://learn.microsoft.com/azure/azure-app-configuration\" title=\"Azure App Configuration documentation\"/>\n                    <link href=\"https://learn.microsoft.com/azure/key-vault\" title=\"Azure Key Vault documentation\"/>\n                    <link href=\"https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-azure-spring-apps#configure-per-service-secrets-and-externalized-settings\" title=\"Configure per-service secrets and externalized settings\"/>\n                </hint>\n            </perform>\n        </rule>"}